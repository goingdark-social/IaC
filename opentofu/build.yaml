apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-secrets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-envoy
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
automountServiceAccountToken: false
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-gateway-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-gateway-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-tlsinterception-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-tlsinterception-secrets
  namespace: cilium-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resourceNames:
  - cilium-config
  resources:
  - configmaps
  verbs:
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgpclusterconfigs/status
  - ciliumbgppeerconfigs/status
  verbs:
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  - ciliumgatewayclassconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgppeeringpolicies
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  - ciliumbgppeerconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  - gateways
  - tlsroutes
  - httproutes
  - grpcroutes
  - referencegrants
  - referencepolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - patch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  - gateways/status
  - httproutes/status
  - grpcroutes/status
  - tlsroutes/status
  verbs:
  - update
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumgatewayclassconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumgatewayclassconfigs/status
  verbs:
  - update
  - patch
- apiGroups:
  - multicluster.x-k8s.io
  resources:
  - serviceimports
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-gateway-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-gateway-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-gateway-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-gateway-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator-tlsinterception-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-tlsinterception-secrets
  namespace: cilium-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  auto-direct-node-routes: "false"
  bpf-distributed-lru: "false"
  bpf-events-drop-enabled: "true"
  bpf-events-policy-verdict-enabled: "true"
  bpf-events-trace-enabled: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-algorithm-annotation: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode-annotation: "false"
  bpf-lb-sock: "false"
  bpf-lb-source-range-all-types: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-policy-stats-map-max: "65536"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: talos
  clustermesh-enable-endpoint-sync: "false"
  clustermesh-enable-mcs-api: "false"
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  datapath-mode: veth
  debug: "false"
  debug-verbose: ""
  default-lb-service-ipam: lbipam
  direct-routing-skip-unreachable: "false"
  dnsproxy-enable-transparent-mode: "true"
  dnsproxy-socket-linger-timeout: "10"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bpf-clock-probe: "false"
  enable-endpoint-health-checking: "true"
  enable-endpoint-lockdown-on-policy-overflow: "false"
  enable-envoy-config: "true"
  enable-gateway-api: "true"
  enable-gateway-api-alpn: "false"
  enable-gateway-api-app-protocol: "false"
  enable-gateway-api-proxy-protocol: "false"
  enable-gateway-api-secrets-sync: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-legacy-routing: "true"
  enable-hubble: "true"
  enable-internal-traffic-policy: "true"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-l2-neigh-discovery: "false"
  enable-l7-proxy: "true"
  enable-lb-ipam: "true"
  enable-masquerade-to-route-source: "false"
  enable-metrics: "true"
  enable-node-selector-labels: "false"
  enable-non-default-deny-policies: "true"
  enable-policy: default
  enable-policy-secrets-sync: "true"
  enable-sctp: "false"
  enable-source-ip-verification: "true"
  enable-svc-source-range-check: "true"
  enable-tcx: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  envoy-access-log-buffer-size: "4096"
  envoy-base-id: "0"
  envoy-config-retry-interval: 15s
  envoy-keep-cap-netbindservice: "true"
  external-envoy-proxy: "true"
  gateway-api-hostnetwork-enabled: "false"
  gateway-api-hostnetwork-nodelabelselector: ""
  gateway-api-secrets-namespace: cilium-secrets
  gateway-api-service-externaltrafficpolicy: Cluster
  gateway-api-xff-num-trusted-hops: "0"
  health-check-icmp-failure-threshold: "3"
  http-retry-count: "3"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-network-policy-correlation-enabled: "true"
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  identity-management-mode: agent
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  iptables-random-fully: "false"
  k8s-client-burst: "100"
  k8s-client-qps: "20"
  k8s-require-ipv4-pod-cidr: "false"
  k8s-require-ipv6-pod-cidr: "false"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: ""
  max-connected-clusters: "255"
  mesh-auth-enabled: "false"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  metrics-sampling-interval: 5m
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  nat-map-stats-entries: "32"
  nat-map-stats-interval: 30s
  node-port-bind-protection: "true"
  nodeport-addresses: ""
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  policy-cidr-match-mode: ""
  policy-default-local-cluster: "false"
  policy-secrets-namespace: cilium-secrets
  policy-secrets-only-from-secrets-namespace: "true"
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-idle-timeout-seconds: "60"
  proxy-initial-fetch-timeout: "30"
  proxy-max-concurrent-retries: "128"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-xff-num-trusted-hops-ingress: "0"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "1000"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-preallocate-identities: "true"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  tunnel-source-port-range: 0-0
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  bootstrap-config.json: |
    {"admin":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/admin.sock"}}},"applicationLogConfig":{"logFormat":{"textFormat":"[%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v"}},"bootstrapExtensions":[{"name":"envoy.bootstrap.internal_listener","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.bootstrap.internal_listener.v3.InternalListener"}}],"dynamicResources":{"cdsConfig":{"apiConfigSource":{"apiType":"GRPC","grpcServices":[{"envoyGrpc":{"clusterName":"xds-grpc-cilium"}}],"setNodeOnFirstMessageOnly":true,"transportApiVersion":"V3"},"initialFetchTimeout":"30s","resourceApiVersion":"V3"},"ldsConfig":{"apiConfigSource":{"apiType":"GRPC","grpcServices":[{"envoyGrpc":{"clusterName":"xds-grpc-cilium"}}],"setNodeOnFirstMessageOnly":true,"transportApiVersion":"V3"},"initialFetchTimeout":"30s","resourceApiVersion":"V3"}},"node":{"cluster":"ingress-cluster","id":"host~127.0.0.1~no-id~localdomain"},"overloadManager":{"resourceMonitors":[{"name":"envoy.resource_monitors.global_downstream_max_connections","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig","max_active_downstream_connections":"50000"}}]},"staticResources":{"clusters":[{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"ingress-cluster","type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"egress-cluster-tls","transportSocket":{"name":"cilium.tls_wrapper","typedConfig":{"@type":"type.googleapis.com/cilium.UpstreamTlsWrapperContext"}},"type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"upstreamHttpProtocolOptions":{},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"egress-cluster","type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"useDownstreamProtocolConfig":{}}}},{"circuitBreakers":{"thresholds":[{"maxRetries":128}]},"cleanupInterval":"2.500s","connectTimeout":"2s","lbPolicy":"CLUSTER_PROVIDED","name":"ingress-cluster-tls","transportSocket":{"name":"cilium.tls_wrapper","typedConfig":{"@type":"type.googleapis.com/cilium.UpstreamTlsWrapperContext"}},"type":"ORIGINAL_DST","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","commonHttpProtocolOptions":{"idleTimeout":"60s","maxConnectionDuration":"0s","maxRequestsPerConnection":0},"upstreamHttpProtocolOptions":{},"useDownstreamProtocolConfig":{}}}},{"connectTimeout":"2s","loadAssignment":{"clusterName":"xds-grpc-cilium","endpoints":[{"lbEndpoints":[{"endpoint":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/xds.sock"}}}}]}]},"name":"xds-grpc-cilium","type":"STATIC","typedExtensionProtocolOptions":{"envoy.extensions.upstreams.http.v3.HttpProtocolOptions":{"@type":"type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions","explicitHttpConfig":{"http2ProtocolOptions":{}}}}},{"connectTimeout":"2s","loadAssignment":{"clusterName":"/envoy-admin","endpoints":[{"lbEndpoints":[{"endpoint":{"address":{"pipe":{"path":"/var/run/cilium/envoy/sockets/admin.sock"}}}}]}]},"name":"/envoy-admin","type":"STATIC"}],"listeners":[{"address":{"socketAddress":{"address":"0.0.0.0","portValue":9964}},"filterChains":[{"filters":[{"name":"envoy.filters.network.http_connection_manager","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager","httpFilters":[{"name":"envoy.filters.http.router","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"}}],"internalAddressConfig":{"cidrRanges":[{"addressPrefix":"10.0.0.0","prefixLen":8},{"addressPrefix":"172.16.0.0","prefixLen":12},{"addressPrefix":"192.168.0.0","prefixLen":16},{"addressPrefix":"127.0.0.1","prefixLen":32}]},"routeConfig":{"virtualHosts":[{"domains":["*"],"name":"prometheus_metrics_route","routes":[{"match":{"prefix":"/metrics"},"name":"prometheus_metrics_route","route":{"cluster":"/envoy-admin","prefixRewrite":"/stats/prometheus"}}]}]},"statPrefix":"envoy-prometheus-metrics-listener","streamIdleTimeout":"300s"}}]}],"name":"envoy-prometheus-metrics-listener"},{"address":{"socketAddress":{"address":"127.0.0.1","portValue":9878}},"filterChains":[{"filters":[{"name":"envoy.filters.network.http_connection_manager","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager","httpFilters":[{"name":"envoy.filters.http.router","typedConfig":{"@type":"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"}}],"internalAddressConfig":{"cidrRanges":[{"addressPrefix":"10.0.0.0","prefixLen":8},{"addressPrefix":"172.16.0.0","prefixLen":12},{"addressPrefix":"192.168.0.0","prefixLen":16},{"addressPrefix":"127.0.0.1","prefixLen":32}]},"routeConfig":{"virtual_hosts":[{"domains":["*"],"name":"health","routes":[{"match":{"prefix":"/healthz"},"name":"health","route":{"cluster":"/envoy-admin","prefixRewrite":"/ready"}}]}]},"statPrefix":"envoy-health-listener","streamIdleTimeout":"300s"}}]}],"name":"envoy-health-listener"}]}}
kind: ConfigMap
metadata:
  name: cilium-envoy-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: talos\npeer-service: \"hubble-peer.kube-system.svc.cluster.local.:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\n\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen       8081;
        listen       [::]:8081;
        server_name  localhost;
        root /app;
        index index.html;
        client_max_body_size 1G;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            location /api {
                proxy_http_version 1.1;
                proxy_pass_request_headers on;
                proxy_pass http://127.0.0.1:8090;
            }
            location / {
                if ($http_user_agent ~* "kube-probe") { access_log off; }
                # double `/index.html` is required here
                try_files $uri $uri/ /index.html /index.html;
            }

            # Liveness probe
            location /healthz {
                access_log off;
                add_header Content-Type text/plain;
                return 200 'ok';
            }
        }
    }
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRHlPbHFFYWlCRVMxaGJ5S1NOK21OekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3T0RJeU1USXlPRFF3V2hjTk1qZ3dPREl4TVRJeQpPRFF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3lXZ0hjcHpuRlFkNVN0SUIyZW01SmRCeUFBQ3VxSDRmdEE2VzZqd0puZVEyN3U2eVcKRFVCWjVTMzRCd2MrZGdSRXAxV3AvbGlYM3ZwUEpGZjdtUFFwc0FnMXRHc1lXcDU3UlpTVXFHYnI1ZDlVa0NoOQpDQlZWN0ZxeXhzd0tFL2MwWTRLYXcxMDNINHRKUlRwSEpJSlkwMWt2ZHBuNGZZUWJsYzVscTJONnErZ3V2UWJrCmJiMmdIL2pncWhFMHE3MERtWUQ1SXlaQndiNzYzRG5wRjJuWWh4SmpoZHlGTldJQUJQcHpqc1NKTmx6RG5yazEKcjh5eGVQUTB3VnR5Mm5MemwwRjYwTWZWMFpVeDN1UkFIRmE5VmNNK0pOdWJCVFBEMWpNK0dSWTNJRDNFQ1o2UApQV1A1bksyOExpODlsU1lyOHlKdXkwOTU2TzBOMzE4OVZ2LzFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVacHdVbXhmcEo2WWM1c20yakhGcWJqdFJVNEl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKOU81eFRDUFA5WUMyN04zaXdDMVBjd2VvTXhlNVllY1FLYXBDdFhRVVlCTWVhQzBRL1BWRjB3CnZjYy85c0FsL1lRbEZMWXR3cWdjSEd0cVBTQlRNWGVyWEgzU3hZeDgvZEc5Q2RxMGlyTThDUmVKRDliMXBZTWwKM2QwRjVsVlpQbm5iT20vMEFHQ3dqN2xHaWMvaStqZEZwR3pxV0tHallRVmRXRmxrUU96alpzbE1Wd0V2b1hvNwpZVU1GOWZEQW9lRS84bVZMcklOaGliUjlQK243SC81bnZFV2pQWVh3VFZyWnJ0RVpJMzBPUmZ5L0pkWE0rRkEyCkpIVFBEVEc3dy9PM3hIMUs3dWVFY09tQVhrZUdueFVNdUdoMENaYXljQnFiSmRmNGk5U1dlN3FGYmdpNFVpZlIKT0luM2dCVW1KSXo1L1V4NXdYVURhSm5kTFBnMVRpZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc2xvQjNLYzV4VUhlVXJTQWRucHVTWFFjZ0FBcnFoK0g3UU9sdW84Q1oza051N3VzCmxnMUFXZVV0K0FjSFBuWUVSS2RWcWY1WWw5NzZUeVJYKzVqMEtiQUlOYlJyR0ZxZWUwV1VsS2htNitYZlZKQW8KZlFnVlZleGFzc2JNQ2hQM05HT0Ntc05kTngrTFNVVTZSeVNDV05OWkwzYVorSDJFRzVYT1phdGplcXZvTHIwRwo1RzI5b0IvNDRLb1JOS3U5QTVtQStTTW1RY0crK3R3NTZSZHAySWNTWTRYY2hUVmlBQVQ2YzQ3RWlUWmN3NTY1Ck5hL01zWGowTk1GYmN0cHk4NWRCZXRESDFkR1ZNZDdrUUJ4V3ZWWERQaVRibXdVenc5WXpQaGtXTnlBOXhBbWUKanoxaitaeXR2QzR2UFpVbUsvTWlic3RQZWVqdERkOWZQVmIvOVFJREFRQUJBb0lCQURoTmc4TDFvNTRyQWhWWAoyQ29PMGx3cjVJZGdCbWpKVlc2ME5SQms3eHhkTWNHdktIZWlMVXR6dHdSU3E2M0RNZXUrYTZPam9MSW8rUm9jCjNnMldKcFkyZFJFSEtMdmlkNTl3d3N2L01hYU14ZWo3TFZ6elBWRUhzVVk0emRic29LQ1FQWDIvNk9CcSs5eWcKbHhvNFkxSEpQcUZtTG9zc2pKVHN3T0NGcjN6YzJ2dnQ3aE9EYmRmbUZHUUFvRURLYUxoVWN3Q0JKSm1FdkxYeQp0aGgwNmU5TW9JTEdyWnM5U0R6YTNDWldVUlJ2bzhiU0RObEx5bXArTS9pL3Uya1hLVEFqYjBZYXR1WWZYa29kClJPWXJYTUwxckNoYXdCeDRiN0tTMTB4MjdHYlVLbm1McTJuZlBxemNWY0dueWhLdWZrdVkzNGxDck96aE52cFUKL2YvWnBtRUNnWUVBMzlDRkdqL05DTHRPN1VTUDV4VGJuamZ5clRvZER1SUFsYWhOaFR6b3hqZVNFczgyQ2pncgppMW5QOU9GNmpXeUNhR09tQXdtTTFzMzBOTjlIU1lBKzlBYW1WT0RvQk1DUTFoaXRtTWZmRWZ3VVVVMmRRVUNTCmRycVNUekF5b1BQbGRBNG1qQ005VXZib3FENEhxWTIyV2xBRyt5MThjanlDYTRLaUg2cnNJSTBDZ1lFQXkvL1MKQTZwRGtLOHFRWjY4MDQxeXgycGVDbkJKdVl4Ymp0UDdQRE10N2RUU0cxZExiSkN2M1B1Zktkdzl4Z0hIL0NvbAo0VHFMUmtvcHpxRGZwT0FnV1ZydmtnVFVxc1ZLWkpRaGg4K1lOMS82L05XVXMzSEtaM2pGUW55ZUdTR0VQem95CmpJVGpWeHM5ZkdSYlhJT0hPazVLYlZhV2w2ZlFEa0JLdm5RK0J3a0NnWUVBcGpPM2s4MkxHWS9XeFpVamM0dG0KcHpDTzBwcVVGNGcydk92MVhScmxGTVVSZ1V4RXFnUWFPZW9nNW8xR0w1MURuZmRad1dtbkg2QmpWNXZ5MlI4VwpJS3FMZS81ajdadCtNcTZ5d3dDeG95NVpmQ0t4dzFJTE1ZWE12bWRoUVdxOG1wa2pnTzl1UzV5MUdyS3RoL2lIClVMdWE0NDFjbTR4Wm9US3A1L0JLVnNVQ2dZQitwZGpOZTdRc3JBTHc4RXJNa0FGVk9uMGR2KzZWYWtVaFhBdWEKcVM5M2V1dmlHNFR3NXJhMzIrTkppcmt6SjhIdmxIOGw0RUc5SnFmajUwNVJQdS8yYVpWWU12V1ErNkVlNWpRVwo2OVBWZFJvT1E4N294TmxpK2NDRmNYWjVwYXhEMEs2M1BIMGpnLzdkTGpUbUw2WVJsYTl4U0JPQUhhZjJZUVhHClRjYUFlUUtCZ1FEWFJndmRqTEUzMGZnT1JNVGdPNnZtaXV5cmlCUmNKRUJZWlVweW1pYWdhU2hQNld6U0RvS1oKZFNDRXBrZ0FhVitKYTVzVjhaZ0ZxVFZYbXFOdzJuZXJBb1VYRU5PWmFMUGR2NklORmd3YWlHdXVhNUFiK3VMbApISzBwT1dXY3phTUh2ZURGUUNpNTRIaFBzVGpEUUZUTGVpQXpHQ2dLMVN5MGJOd1V6Z0J2WEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRHlPbHFFYWlCRVMxaGJ5S1NOK21OekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3T0RJeU1USXlPRFF3V2hjTk1qZ3dPREl4TVRJeQpPRFF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3lXZ0hjcHpuRlFkNVN0SUIyZW01SmRCeUFBQ3VxSDRmdEE2VzZqd0puZVEyN3U2eVcKRFVCWjVTMzRCd2MrZGdSRXAxV3AvbGlYM3ZwUEpGZjdtUFFwc0FnMXRHc1lXcDU3UlpTVXFHYnI1ZDlVa0NoOQpDQlZWN0ZxeXhzd0tFL2MwWTRLYXcxMDNINHRKUlRwSEpJSlkwMWt2ZHBuNGZZUWJsYzVscTJONnErZ3V2UWJrCmJiMmdIL2pncWhFMHE3MERtWUQ1SXlaQndiNzYzRG5wRjJuWWh4SmpoZHlGTldJQUJQcHpqc1NKTmx6RG5yazEKcjh5eGVQUTB3VnR5Mm5MemwwRjYwTWZWMFpVeDN1UkFIRmE5VmNNK0pOdWJCVFBEMWpNK0dSWTNJRDNFQ1o2UApQV1A1bksyOExpODlsU1lyOHlKdXkwOTU2TzBOMzE4OVZ2LzFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVacHdVbXhmcEo2WWM1c20yakhGcWJqdFJVNEl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKOU81eFRDUFA5WUMyN04zaXdDMVBjd2VvTXhlNVllY1FLYXBDdFhRVVlCTWVhQzBRL1BWRjB3CnZjYy85c0FsL1lRbEZMWXR3cWdjSEd0cVBTQlRNWGVyWEgzU3hZeDgvZEc5Q2RxMGlyTThDUmVKRDliMXBZTWwKM2QwRjVsVlpQbm5iT20vMEFHQ3dqN2xHaWMvaStqZEZwR3pxV0tHallRVmRXRmxrUU96alpzbE1Wd0V2b1hvNwpZVU1GOWZEQW9lRS84bVZMcklOaGliUjlQK243SC81bnZFV2pQWVh3VFZyWnJ0RVpJMzBPUmZ5L0pkWE0rRkEyCkpIVFBEVEc3dy9PM3hIMUs3dWVFY09tQVhrZUdueFVNdUdoMENaYXljQnFiSmRmNGk5U1dlN3FGYmdpNFVpZlIKT0luM2dCVW1KSXo1L1V4NXdYVURhSm5kTFBnMVRpZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRTVdTVytGTzNxWDF6cDZRc3RTUzdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3T0RJeU1USXlPRFF6V2hjTk1qWXdPREl5TVRJeQpPRFF6V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEV1NqTTBWeFUwekxOTlUydGUvNXM0LzVEbEUvY2YKbmRBUWlvRisrd2pTVjVUSnJqcklZU01Rc3NMWnpWSFI3UG1XOGE5cGhma2VXc3dEMVZORVhXSytscEpNbGpWawpGNUNBU3IwSGNFZDlNVXIwei95bWtpNkxlWU9XWFVXM0lGdUlGdjV1MkEwMWJFWktyOWhQWGJ0NHhtZHEwS21NCkhWM2hUdUZCWW13Mlc0TS9oWVVyQzExSExzWHRDWUR4U25Hc2w2NW91cFpWTThhRXVEQXB2T01FT0pqT3NpUncKYzh2b3c4eGZNWEJ6cnlyUXAwOTJIQUYwL2ZqSEJRS2JKa2VCYlBWRFlFd053NlJKYWkvVkQyVFVxVGZOV2dkdwp3R0EvMlgzRHkvbnlDbXpDcmxnRDd1UWNJcW5JaStZU2NNcXFOV01aTTdKNUlKdG9VVExtc3lUREFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZHYWNGSnNYNlNlbUhPYkp0b3h4YW00NwpVVk9DTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFWMVg4SHJrZUJmMnhDdUxJSSs4Tm12R01DcmZ0bHpOemlYMlZKa2dkVmVUeDAyZnEKWlRPVEdBRkZER3cwcVNyNHROQ3picS80V0FXYVVGOTJSYTFpYnJud0VacSs2U3Z1U3JQcmhMQW15ZVJrQWJlcApXR3JVM1FOVGpPTUlLMzZpdkZxTHJ1Ny9pVWhnbGdRUVdndG1VMUdSVnRHT3lRUTdkT09udWo4YlZ6K1Exdy9jCnA0d0pLb3pkc1hDRnNtVUN4SkpVMjBDMjMzQVpGUEhMSnF6Z3V6c1BJeWY4OCtEcXQzTmljTHV2Zm5SU3FXYXMKb0srR01BNkk3RHdSajVOU2VYc2c5WU1ZbVVPQ0pZRTZIU3pWYk9Qbmh0UkM4WUg5S3UyS1g3UFdpVVBReGwxSApiV1F1WVAzc0V5ZGE2VWdMRjNFVUI1SlY1R2RqNEhNempXL1RHUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb0FJQkFBS0NBUUVBMWtvek5GY1ZOTXl6VFZOclh2K2JPUCtRNVJQM0g1M1FFSXFCZnZzSTBsZVV5YTQ2CnlHRWpFTExDMmMxUjBlejVsdkd2YVlYNUhsck1BOVZUUkYxaXZwYVNUSlkxWkJlUWdFcTlCM0JIZlRGSzlNLzgKcHBJdWkzbURsbDFGdHlCYmlCYitidGdOTld4R1NxL1lUMTI3ZU1abmF0Q3BqQjFkNFU3aFFXSnNObHVEUDRXRgpLd3RkUnk3RjdRbUE4VXB4ckpldWFMcVdWVFBHaExnd0tiempCRGlZenJJa2NIUEw2TVBNWHpGd2M2OHEwS2RQCmRod0JkUDM0eHdVQ215WkhnV3oxUTJCTURjT2tTV292MVE5azFLazN6Vm9IY01CZ1A5bDl3OHY1OGdwc3dxNVkKQSs3a0hDS3B5SXZtRW5ES3FqVmpHVE95ZVNDYmFGRXk1ck1rd3dJREFRQUJBb0lCQUhCUnZoc09GZ2h4enYyVgozdTZSVFp3SG9Mdmh4aU1sUmJ5VnpLQnhGa09pTWxPdjVoSEhrR2lkT2pLTlF2aWtuSUk0dGZlNmlFUVgxVjJoCkFCOFNUOEtVQzZUbkNwOG5GcytYM1JLOEVFeVhmTEZySHdOMEZiOTNkcmhtdFRieVYrZXlIYlNkdS9hbmhRUjYKdlFlRW10SUlOSWF4VGwwcHUxNXdTUE5Ma21xK2dJRlRteWh3Ym9jaHlwWi9qazA1YjJvaHVibWxiVC8rZGlENQpVU3ZHdUZVZlkvY3RRYVFqRjVFY3UwK1lyQ3hjREtXWVNjT01qMWRxc2VGYVFDN3hxcElVdmFpeWFmUFltY1F1Cnd1VS9vc1ZPRmljbktlKzM0elR2QnRuTHVKVnFsOGhFOXFhaGl2Sk1qK1ZOOU5oRE5QWjNMa1V4N1VOM01FRkwKR3Z0cnpXa0NnWUVBL05iWkxvRXJ2WWM4ZkZZZ2NTUGNRcnlkVU1seWhLRkUrdHArZWVtNERQZkhpZXhQc0EvYgpzdXg5UUV5SHFISVlOa0l5Yk1JeUQwc2huMnN5dDFWaW9yQS83RHUraEVsb3FwUHViM2JvVWgvbm90TTQyNEM5CjdtaklVcDRFUjV0Uk9QYXVYeFVFZ0QwQU92ZUJib3FieXQ1K3VXaFB2MXJGL2U5cW1xRTRDV2NDZ1lFQTJQZjcKeFZjSEJKOVBSaXFwZ0VUNFZ3ekVENEtRNVVEUElRdHlkaURXcXM5OWFlZVZzdjEybWRaVk1oRWd6STFPbVdLeQpOWlUrbDR5TnVTVWVpelN5L2J3R0FqTTRqN3JiVnZwdjdtVHFYMXpaQzk5QTZ5T2VoNmVqUkx1MlVJdmRvT2piCmx3cGlTOUR5MnRWd1h2Y3hxVjh3ZzBjeXJKbXVmcXpQNEtzVkJFVUNnWUF5Nzhtekw3eXpJeEtSYmZ4OUxwOUsKSnB0KzBnYXJKNTR3OTJHeGg5OVhaWGVpbHFQN01VYXVoaXc1anZGcGd3clRxNFJqR3NCaENsN01zaGoyakZJaAp1bVkyWGxia2FiR1hZOVFPU3FORklENVhORHhwSkVlZlJ5Yk1WaDlBbWM3RUxoWTArNVA3amM2RkVxWFZza0R1Cm51SmkwZHYzRGYrRFIvOXZCWG0za3dKL0xCSXpFZUtiaWxUUnhXN2sveWtEU0t0UEo5ZGRsek9TM3lOMEhJcVAKRUNNVlZtMnorcWVCYjc0WmtCSHFsNkljVlF1M0p5c3BpNThCS3BwZm1lY2FkRys4eUxXZXg1TXMrbjNrUG9oQgpFeDNJK0tCZ2oyS3MwT0U4U0xuWVRvUWFnSlRNQmVJV0ZWQmNCQmRXdS9ONkl1MHk3WGVJMDRaajYxY3U0blBkCjBRS0JnQk5RVStqQ1kxK2V5UlRXeHVEUkRmOStCTVh5bHloczZjTWIyamtMWnB4ZzBpak5SRUVBRU0xd2dJZUYKalI5RXVqV0IvbWhtTDZoQWpCY3hONDZJbEhKQWlaMTRmaXJRcE5YcVNMd0VWQjhJcnhyNTdiZ0tXeUtFU0pTNQpNbDlxNWFGQTgzWlROM2dLSHA2ZFJVT1QyczlMK2c2VmdTQmowdlpKZ1Z2bSswU0wKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRHlPbHFFYWlCRVMxaGJ5S1NOK21OekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV3T0RJeU1USXlPRFF3V2hjTk1qZ3dPREl4TVRJeQpPRFF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3lXZ0hjcHpuRlFkNVN0SUIyZW01SmRCeUFBQ3VxSDRmdEE2VzZqd0puZVEyN3U2eVcKRFVCWjVTMzRCd2MrZGdSRXAxV3AvbGlYM3ZwUEpGZjdtUFFwc0FnMXRHc1lXcDU3UlpTVXFHYnI1ZDlVa0NoOQpDQlZWN0ZxeXhzd0tFL2MwWTRLYXcxMDNINHRKUlRwSEpJSlkwMWt2ZHBuNGZZUWJsYzVscTJONnErZ3V2UWJrCmJiMmdIL2pncWhFMHE3MERtWUQ1SXlaQndiNzYzRG5wRjJuWWh4SmpoZHlGTldJQUJQcHpqc1NKTmx6RG5yazEKcjh5eGVQUTB3VnR5Mm5MemwwRjYwTWZWMFpVeDN1UkFIRmE5VmNNK0pOdWJCVFBEMWpNK0dSWTNJRDNFQ1o2UApQV1A1bksyOExpODlsU1lyOHlKdXkwOTU2TzBOMzE4OVZ2LzFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVacHdVbXhmcEo2WWM1c20yakhGcWJqdFJVNEl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKOU81eFRDUFA5WUMyN04zaXdDMVBjd2VvTXhlNVllY1FLYXBDdFhRVVlCTWVhQzBRL1BWRjB3CnZjYy85c0FsL1lRbEZMWXR3cWdjSEd0cVBTQlRNWGVyWEgzU3hZeDgvZEc5Q2RxMGlyTThDUmVKRDliMXBZTWwKM2QwRjVsVlpQbm5iT20vMEFHQ3dqN2xHaWMvaStqZEZwR3pxV0tHallRVmRXRmxrUU96alpzbE1Wd0V2b1hvNwpZVU1GOWZEQW9lRS84bVZMcklOaGliUjlQK243SC81bnZFV2pQWVh3VFZyWnJ0RVpJMzBPUmZ5L0pkWE0rRkEyCkpIVFBEVEc3dy9PM3hIMUs3dWVFY09tQVhrZUdueFVNdUdoMENaYXljQnFiSmRmNGk5U1dlN3FGYmdpNFVpZlIKT0luM2dCVW1KSXo1L1V4NXdYVURhSm5kTFBnMVRpZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQU5lMXlBV1ZxaldLbFZIOHY5aW9kM1V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTURneU1qRXlNamcwTVZvWERUSTJNRGd5TWpFeQpNamcwTVZvd0tERW1NQ1FHQTFVRUF3d2RLaTUwWVd4dmN5NW9kV0ppYkdVdFozSndZeTVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMxYkJRTXZMMGxEVUlNZ1prSVZyNVUKRG1TaTN5QXc4cWZLMTBBSVdKNUY3OEh1ZVcxYU1yQU9oZHJzekgrLy9iMWJhVDh4cEhRK0ZQelRxL0VqM2MwWQp2eDVXL1dGRkNXMWt4SjFiTDROa01heENsMWRsdXk5ZWprdVQxcUp4ZzhFalFLWFd5aXpJT1dPUWxpczU2eUhICkRqbWpycndQY21ramtXREpISTBrSHVrWlhzOFRCWmRCUmIwTk45dnRGdklVYU9YZEhVUlNRc0tRRDRkdVpQZlUKMWRWWW1zUHlGY2RyS0xVZ3A4ZFBSRlF2R1AySHNwRzFpdG13Q0ZkdjcwQjZqOC9ZYjBSa2pjUjlMVksycEFaMQp4NUdsOUxON0VoSWwxNDhDbHRHL3pVbXpNb0twTUFDM21OZENpL0FnS243cStDc2dDWnFvendJVlZ6TTJySGlMCkFnTUJBQUdqZ1lzd2dZZ3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkdhY0ZKc1g2U2VtSE9iSgp0b3h4YW00N1VWT0NNQ2dHQTFVZEVRUWhNQitDSFNvdWRHRnNiM011YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0CkxtbHZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJISmtpWklxam1pNmZ4QzBDNkNqV1VkMmViaFJCYkdUTXgKM3d3SnFYaDFvZm1zWUxoakRDQ21ESmtqYzVkMGo4cW5ZQnJSRHZqWXVXWHVmQWpHYU81K2lEeW5OUi8xTlFiYQpIUWI3bVpYSG54V3BrQlNCdVZwZnp4MUJaMlIyUE0xdHg4Wmh1NTlOQXRjWkl5RDgzR2xCOGV5bmY1NUgzVjV3CnhFNFNhb0IrVHVyc0YydTJSd0dqTXJXTml2eUFGT20wS1dlUldXZ24vMVllM2QwZjVRakp1T0FHdVM2QjVScUEKYllFQytWNVVFNUw1c0dzRS9QTVg5dTNrendNSnBUNFpLTmUxc3Y1WEt4Ny9aOElSeUhpQzl3MkZMclhBOVhMUgp4Yk5EUDNPdDdPQlBKcGRRRUpVNnNrTnpPdTlrczczQXF4TTJtYm4rdm1hb2lINFRySlVrCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFd3VURMeTlKUTFDRElHWkNGYStWQTVrb3Q4Z01QS255dGRBQ0ZpZVJlL0I3bmx0CldqS3dEb1hhN014L3YvMjlXMmsvTWFSMFBoVDgwNnZ4STkzTkdMOGVWdjFoUlFsdFpNU2RXeStEWkRHc1FwZFgKWmJzdlhvNUxrOWFpY1lQQkkwQ2wxc29zeURsamtKWXJPZXNoeHc0NW82NjhEM0pwSTVGZ3lSeU5KQjdwR1Y3UApFd1dYUVVXOURUZmI3UmJ5RkdqbDNSMUVVa0xDa0ErSGJtVDMxTlhWV0pyRDhoWEhheWkxSUtmSFQwUlVMeGo5Cmg3S1J0WXJac0FoWGIrOUFlby9QMkc5RVpJM0VmUzFTdHFRR2RjZVJwZlN6ZXhJU0pkZVBBcGJSdjgxSnN6S0MKcVRBQXQ1alhRb3Z3SUNwKzZ2Z3JJQW1hcU04Q0ZWY3pOcXg0aXdJREFRQUJBb0lCQVFDRy9rV28rS09STjExSApLd093NWNLM2p3SXBBdmZVRkNyd1R0eFJtWWNqcVBSWHV6aTRIZkZNelNNS2dsd29ndWpzWk5MbDRHV3ljREYwClc0T1IyWStyODBIakhxVExGdW0wU215QUZrbWhPeWpmWC9kak5qWllHRzk2TVFJc2p3b2ViaE00VUxXandyZ28KTk9Vek1wZXVveElXam9WV3hSNGduaU16WWpCUGlBUFBRU0huZE5jZERIa3U5UmFrb0RJVCtwbHhuVFF4OVE0Zwp3WFBjckc3a3JiQ3UwSkphaFhxd2hXTnhPNEY2MzYwd3VQR010Q1FUUmI5UjRvQjZDZWlVelNrSDRBdU41dmozCkdmNmprWFVUeHhuVDhPbVZzSHFDdEd2NEF0bHdMR3QyZFBKM1ZVRW14VVg5UHFpVmpPbDRvbFRPZ0JQa3o3dzEKbUlSS1lQZzVBb0dCQU5yUjkxRU9MSlpERVcwTlhKV3RMZi9HQ0E2bXlCSWc2V1M3YXZQU2Q2a2dEMWVsa0tNcAo0dFBaL1RPMlhlcm50aEdYSkt0bEIxczB5TzNLemtUQlBuUWdMWWNERXBxS2hWWjJ3US9zMXFlY0JnZUVxWmNkCm92cGQ1RXVuRGFSTkFEYmNxanZpOVRTOG51S2xqdWVGRUJXcVNHTmNCZW54d1BNR1Vub1R3dFkxQW9HQkFOUS8KYU1uQXRxMjJmYVlzK3pNaHdiZWhOWTlwVXh6cVB3eXIrZFZNS1hpTStDVk5ob0h0Tng1YUV3UWFOZHNoMFh5dAoxWlBPSy9wVzhJa1AxdDQ5bWF1VFh0TnJVWHdVZ3U1ejJqZHVLSVczeU5RRGZnNVp0NFFvMHB5bG1WN1NTYnFVCnplbm9BSk5RdWpzbjBWUys5Z2FOQXppeWlKd2EvcWxVTWRyc2ZPdS9Bb0dCQUpVU0s0RnR2WlJVZG4rcmRhS0cKUzJzUEZ4Z2NLUHFvcnpldnNtb092UFJiNGZmYzFBOUVEc0l5cEp0aEp0Uk1MSzRKSUxNZTdZY0dDOGhydkYvOApvalpzWVhlejhTMlZKc2REdWJ6R3BXbWtFanQyOWkzN3c3YjYxZmR3QkF3bFpQcjdFNEllMk51bmtEcHBmVlJlClF4bnZXc2ROdnIya3M4VWNUbjNhRG9idEFvR0FBTjhGd2hZOWFiY2ZDdWlTVzJKZkZpN2VObWw3UXRvZlNpRUcKbEg2TWlRY2pHWndZMmoyc0JUN2ZaeHZvYnE3VDJrd29YVVB5WUVPdEZ4THVrZGowNFlSb1ZqdlJpTTNZdjd2UQpBSHcrUkZZOXg4ai80blV4MEtRT1FVQll3Yy9oSjVmbXhIZ0VVSlo3UFRUcm9ncHFuaHBFRWg2QmV3cU5Vd3FhCmJjaWN0cWNDZ1lCZkRRZ3RLSVE4T2luNlpBZXVERjVPeTJvYnpFSWNCOHU2TFFUWU9nSExJWEtUS2psSHU1aG0KOWNQeUJZcTJsMXZ0dVI4NTMzei9oZk1wc21rQ0NnODRPbEYycnpKY2YwRy9yQ2ZyeWk5a3h0MG9VTUUxMnFtMAplZnc2a1BxVDNRZjNpWGRhSVRQbGJ1bXJWVVdjYTY2RnFOSWlVUk93TFQybmxwSDV4WHZIcnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    io.cilium/app: proxy
    k8s-app: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium-envoy
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: grpc
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 1df5ed261694cb289b4db1352d58cf2635731ea59e51795ca72cfadddf55a2b3
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.18.1@sha256:97f4553afa443465bdfbc1cc4927c93f16ac5d78e4dd2706736e7395382201bc
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 200m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: cilium-operator
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
      - key: node-role.kubernetes.io/master
        operator: Exists
      - key: node.kubernetes.io/not-ready
        operator: Exists
      - key: node.cilium.io/agent-not-ready
        operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 69f595f2f91fc6f0dc9862ad571cf49ecfde4f5581de95d2512ca3c3d35832c9
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.18.1@sha256:7e2fd4877387c7e112689db7c2b153a4d5c77d125b8d50d472dbe81fc1b139b0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 12
          grpc:
            port: 4222
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          initialDelaySeconds: 10
          periodSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 76283720d1bb70050debf51116121fa9a67ebc9d1cd9167c3dd9bdbfb613df37
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.13.2@sha256:9e37c1296b802830834cc87342a9182ccbb71ffebb711971e849221bd9d59392
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        securityContext:
          allowPrivilegeEscalation: false
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.13.2@sha256:a034b7e98e6ea796ed26df8f4e71f83fc16465a19d166eff67a03b822c0bfa15
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        securityContext:
          allowPrivilegeEscalation: false
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 1df5ed261694cb289b4db1352d58cf2635731ea59e51795ca72cfadddf55a2b3
        kubectl.kubernetes.io/default-container: cilium-agent
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              divisor: "1"
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        - name: KUBE_CLIENT_BACKOFF_BASE
          value: "1"
        - name: KUBE_CLIENT_BACKOFF_DURATION
          value: "120"
        image: quay.io/cilium/cilium:v1.18.1@sha256:65ab17c052d8758b2ad157ce766285e04173722df59bdee1ea6d5fda7149f0e9
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            - name: require-k8s-connectivity
              value: "false"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 300
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /var/run/cilium/netns
          mountPropagation: HostToContainer
          name: cilium-netns
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.18.1@sha256:65ab17c052d8758b2ad157ce766285e04173722df59bdee1ea6d5fda7149f0e9
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.18.1@sha256:65ab17c052d8758b2ad157ce766285e04173722df59bdee1ea6d5fda7149f0e9
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.18.1@sha256:65ab17c052d8758b2ad157ce766285e04173722df59bdee1ea6d5fda7149f0e9
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.18.1@sha256:65ab17c052d8758b2ad157ce766285e04173722df59bdee1ea6d5fda7149f0e9
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.18.1@sha256:65ab17c052d8758b2ad157ce766285e04173722df59bdee1ea6d5fda7149f0e9
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        appArmorProfile:
          type: Unconfined
        seccompProfile:
          type: Unconfined
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /var/run/netns
          type: DirectoryOrCreate
        name: cilium-netns
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
          - secret:
              items:
              - key: tls.key
                path: local-etcd-client.key
              - key: tls.crt
                path: local-etcd-client.crt
              - key: ca.crt
                path: local-etcd-client-ca.crt
              name: clustermesh-apiserver-local-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium-envoy
    name: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium-envoy
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-envoy
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium-envoy
        name: cilium-envoy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cilium.io/no-schedule
                operator: NotIn
                values:
                - "true"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium-envoy
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --keep-cap-net-bind-service
        - --
        - -c /var/run/cilium/envoy/bootstrap-config.json
        - --base-id 0
        - --log-level info
        command:
        - /usr/bin/cilium-envoy-starter
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium-envoy:v1.34.4-1754895458-68cffdfa568b6b226d70a7ef81fc65dda3b890bf@sha256:247e908700012f7ef56f75908f8c965215c26a27762f296068645eb55450bda2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-envoy
        ports:
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - PERFMON
            - BPF
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9878
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /var/run/cilium/envoy/artifacts
          name: envoy-artifacts
          readOnly: true
        - mountPath: /var/run/cilium/envoy/
          name: envoy-config
          readOnly: true
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      securityContext:
        appArmorProfile:
          type: Unconfined
      serviceAccountName: cilium-envoy
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - hostPath:
          path: /var/run/cilium/envoy/artifacts
          type: DirectoryOrCreate
        name: envoy-artifacts
      - configMap:
          defaultMode: 256
          items:
          - key: bootstrap-config.json
            path: bootstrap-config.json
          name: cilium-envoy-config
        name: envoy-config
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
