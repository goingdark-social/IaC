# https://github.com/argoproj/argo-helm/blob/main/charts/argo-cd/values.yaml
configs:
  cm:
    create: true
    application.resourceTrackingMethod: label
    admin.enabled: true
    url: https://argocd.goingdark.social
    kustomize.buildOptions: '--enable-helm'
    accounts.kubechecks: apiKey
    # OIDC Configuration
    # dex.config: |
    #   connectors:
    #   - config:
    #       issuer: https://sso.goingdark.social/application/o/argocd/
    #       clientID: $dex.authentik.clientId
    #       clientSecret: $dex.authentik.clientSecret
    #       insecureEnableGroups: true
    #       scopes:
    #         - openid
    #         - profile
    #         - email
    #     name: authentik
    #     type: oidc
    #     id: authentik

  cmp:
    create: true
    plugins:
      kustomize-build-with-helm:
        generate:
          command: [sh, -c]
          args: [kustomize build --enable-helm]
  params:
    controller.diff.server.side: true
    server.insecure: true
  rbac:
    create: true
    policy.csv: |
      g, ArgoCD Admins, role:admin
      g, ArgoCD Viewers, role:readonly
      g, ArgoCDAdmins, role:admin
      g, ArgoCDViewers, role:readonly
      g, argocd:admin, role:admin
      g, argocd:read_all, role:readonly
      p, role:kubechecks, applications, get,   */*, allow
      p, role:kubechecks, applications, list,  */*, allow
      p, role:kubechecks, applications, sync,  */*, allow
      p, role:kubechecks, applications, create, */*, allow
      p, role:kubechecks, applications, update, */*, allow
      p, role:kubechecks, projects, get,       *, allow
      p, role:kubechecks, projects, update,    *, allow
      p, role:kubechecks, clusters, get, *, allow
      g, kubechecks, role:kubechecks

crds:
  install: true
  # -- Keep CRDs on chart uninstall
  keep: false

controller:
  replicas: 1
  tolerations:
    - key: node.cloudprovider.kubernetes.io/uninitialized
      operator: Exists
      effect: NoSchedule
  resources:
    requests:
      cpu: 50m
      memory: 256Mi
    limits:
      cpu: 300m
      memory: 512Mi

dex:
  enabled: false
  tolerations:
    - key: node.cloudprovider.kubernetes.io/uninitialized
      operator: Exists
      effect: NoSchedule
  resources:
    requests:
      cpu: 10m
      memory: 32Mi
    limits:
      memory: 128Mi

# Disable HA Redis, use single Redis
redis-ha:
  enabled: false

redis:
  enabled: true
  # keep it tiny
  master:
    resources:
      requests:
        cpu: 20m
        memory: 64Mi
      limits:
        memory: 256Mi

server:
  autoscaling:
    enabled: false
  resources:
    requests:
      cpu: 30m
      memory: 128Mi
    limits:
      memory: 256Mi
  tolerations:
    - key: node.cloudprovider.kubernetes.io/uninitialized
      operator: Exists
      effect: NoSchedule
  extensions:
    enabled: true
  service:
    type: ClusterIP
    httpsPort: 443
    httpsTargetPort: 8443

# No HPA or strict PDB for repoServer
repoServer:
  autoscaling:
    enabled: false
  pdb:
    enabled: false
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  tolerations:
    - key: node.cloudprovider.kubernetes.io/uninitialized
      operator: Exists
      effect: NoSchedule
  containerSecurityContext:
    readOnlyRootFilesystem: true
  volumes:
    - name: cmp-kustomize-build-with-helm
      configMap:
        name: argocd-cmp-cm
    - name: cmp-tmp
      emptyDir: {}
  extraContainers:
    - name: kustomize-build-with-helm
      command:
        - argocd-cmp-server
      image:
        '{{ default .Values.global.image.repository .Values.repoServer.image.repository }}:{{ default (include
        "argo-cd.defaultTag" .) .Values.repoServer.image.tag }}'
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop: [ALL]
      volumeMounts:
        - name: plugins
          mountPath: /home/argocd/cmp-server/plugins
        - name: cmp-kustomize-build-with-helm
          mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: kustomize-build-with-helm.yaml
        - mountPath: /tmp
          name: cmp-tmp

applicationSet:
  replicas: 1
  pdb:
    enabled: false
  resources:
    requests:
      cpu: 30m
      memory: 64Mi
    limits:
      memory: 256Mi
  tolerations:
    - key: node.cloudprovider.kubernetes.io/uninitialized
      operator: Exists
      effect: NoSchedule

notifications:
  enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 64Mi
    limits:
      cpu: 1000m
      memory: 128Mi


