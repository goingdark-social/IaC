apiVersion: v1
kind: ConfigMap
metadata:
  name: adapter-config
  namespace: victoriametrics
data:
  config.yaml: |
    rules:
    # PRIMARY: HTTP request queue duration - leading indicator (target: 35ms)
    - seriesQuery: 'ruby_http_request_queue_duration_seconds_bucket{job="mastodon-web"}'
      name:
        matches: "ruby_http_request_queue_duration_seconds_bucket"
        as: "ruby_http_request_queue_duration_seconds_p95"
      metricsQuery: 'histogram_quantile(0.95, rate(<<.Series>>{job="mastodon-web"}[2m]))'
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
    
    # SECONDARY: Request backlog - queue depth indicator  
    - seriesQuery: 'ruby_puma_request_backlog{job="mastodon-web"}'
      name:
        matches: "ruby_puma_request_backlog"
        as: "ruby_puma_request_backlog"
      metricsQuery: 'max(<<.Series>>{job="mastodon-web"})'
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}

    # Request rate - for monitoring
    - seriesQuery: 'ruby_http_requests_total{job="mastodon-web"}'
      name:
        matches: "ruby_http_requests_total"
        as: "ruby_http_requests_per_second"
      metricsQuery: 'rate(<<.Series>>{job="mastodon-web"}[2m])'
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-adapter
  namespace: victoriametrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-adapter
  template:
    metadata:
      labels:
        app: prometheus-adapter
    spec:
      serviceAccountName: prometheus-adapter
      containers:
      - name: prometheus-adapter
        image: registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.12.0
        args:
        - --cert-dir=/var/run/serving-cert
        - --config=/etc/adapter/config.yaml
        - --logtostderr=true
        - --prometheus-url=http://vmsingle-vm.victoriametrics.svc.cluster.local:8429
        - --metrics-relist-interval=1m
        - --v=4
        - --secure-port=6443
        - --tls-cert-file=/var/run/serving-cert/tls.crt
        - --tls-private-key-file=/var/run/serving-cert/tls.key
        ports:
        - containerPort: 6443
          name: https
        volumeMounts:
        - name: volume-serving-cert
          mountPath: /var/run/serving-cert
          readOnly: true
        - name: config
          mountPath: /etc/adapter/
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
      volumes:
      - name: volume-serving-cert
        secret:
          secretName: prometheus-adapter-certs
      - name: config
        configMap:
          name: adapter-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-adapter
  namespace: victoriametrics
spec:
  ports:
  - name: https
    port: 443
    targetPort: 6443
  selector:
    app: prometheus-adapter
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-adapter
  namespace: victoriametrics
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-adapter
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/stats
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-adapter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-adapter
subjects:
- kind: ServiceAccount
  name: prometheus-adapter
  namespace: victoriametrics
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-adapter-system-auth-delegator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: prometheus-adapter
  namespace: victoriametrics
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-adapter-auth-reader
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: prometheus-adapter
  namespace: victoriametrics
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.custom.metrics.k8s.io
spec:
  service:
    name: prometheus-adapter
    namespace: victoriametrics
  group: custom.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
---
# Certificate generation job
apiVersion: batch/v1
kind: Job
metadata:
  name: prometheus-adapter-cert-generator
  namespace: victoriametrics
spec:
  template:
    spec:
      serviceAccountName: prometheus-adapter-cert-generator
      containers:
      - name: cert-generator
        image: registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230312-helm-chart-4.5.2-28-g66a760794
        args:
        - create
        - --host=prometheus-adapter,prometheus-adapter.victoriametrics.svc
        - --namespace=victoriametrics
        - --secret-name=prometheus-adapter-certs
      restartPolicy: OnFailure
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-adapter-cert-generator
  namespace: victoriametrics
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: prometheus-adapter-cert-generator
  namespace: victoriametrics
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: prometheus-adapter-cert-generator
  namespace: victoriametrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-adapter-cert-generator
subjects:
- kind: ServiceAccount
  name: prometheus-adapter-cert-generator
  namespace: victoriametrics