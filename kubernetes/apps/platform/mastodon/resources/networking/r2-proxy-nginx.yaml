apiVersion: v1
kind: ConfigMap
metadata:
  name: r2-proxy-nginx-conf
  namespace: mastodon
data:
  default.conf.template: |
    resolver kube-dns.kube-system.svc.cluster.local valid=10s;
    server {
      listen 80;
      location / {
        set $r2_endpoint "${REAL_ENDPOINT}";
        proxy_pass $r2_endpoint$request_uri;
        proxy_set_header Host $http_host;
        proxy_pass_request_headers on;
        proxy_buffering off;
        proxy_ssl_server_name on;
        proxy_ssl_protocols TLSv1.2 TLSv1.3;
        proxy_ssl_verify off;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: r2-proxy
  namespace: mastodon
spec:
  replicas: 1
  selector:
    matchLabels:
      app: r2-proxy
  template:
    metadata:
      labels:
        app: r2-proxy
    spec:
      containers:
        - name: nginx
          image: nginx:stable-alpine
          env:
            - name: REAL_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: s3-endpoint-config
                  key: ENDPOINT_URL
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-template
              mountPath: /etc/nginx/templates/default.conf.template
              subPath: default.conf.template
      volumes:
        - name: nginx-template
          configMap:
            name: r2-proxy-nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: r2-proxy
  namespace: mastodon
spec:
  selector:
    app: r2-proxy
  ports:
    - port: 80
      targetPort: 80
