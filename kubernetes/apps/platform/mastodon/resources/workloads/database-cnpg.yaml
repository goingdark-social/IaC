---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: database-cnpg
  namespace: mastodon
spec:
  instances: 2
  imageName: ghcr.io/cloudnative-pg/postgresql:17.5
  enablePDB: true
  managed:
    roles:
      - name: app
        ensure: present
        login: true
        passwordSecret:
          name: database-cnpg-app
        inRoles:
          - pg_read_all_data
          - pg_write_all_data
  storage:
    size: 80Gi
    storageClass: hcloud-volumes-encrypted-xfs
  walStorage:
    size: 20Gi
    storageClass: hcloud-volumes-encrypted-xfs
  plugins:
    - name: barman-cloud.cloudnative-pg.io
      isWALArchiver: true
      parameters:
        barmanObjectName: database-backup

  monitoring:
    enablePodMonitor: true
  postgresql:
    parameters:
      max_connections: "300"
      shared_buffers: "512MB"
      effective_cache_size: "512MB"
      maintenance_work_mem: "128MB"
      checkpoint_completion_target: "0.9"
      wal_buffers: "16MB"
      default_statistics_target: "100"
      random_page_cost: "1.1"
      effective_io_concurrency: "100"
      work_mem: "1702kB"
      huge_pages: "off"
      min_wal_size: "2GB"
      max_wal_size: "8GB"
      max_worker_processes: "4"
      max_parallel_workers_per_gather: "2"
      max_parallel_workers: "4"
      max_parallel_maintenance_workers: "2"
      pg_stat_statements.max: "10000"
      pg_stat_statements.track: "all"
  resources:
    requests:
      memory: "2Gi"
      cpu: "1"
    limits:
      memory: "2Gi"
  affinity:
    enablePodAntiAffinity: true
    topologyKey: kubernetes.io/hostname
    tolerations:
      - key: "autoscaler-node"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
apiVersion: postgresql.cnpg.io/v1
kind: Pooler
metadata:
  name: database-cnpg-pooler-rw
  namespace: mastodon
spec:
  cluster:
    name: database-cnpg
  instances: 2
  type: rw
  pgbouncer:
    poolMode: transaction
    parameters:
      max_client_conn: "1000"
      default_pool_size: "125"
  template:
    metadata:
      labels:
        app: database-cnpg-pooler-rw
    spec:
      containers:
        - resources:
            requests:
              cpu: 10m
              memory: 100Mi
            limits:
              memory: 100Mi
          name: pgbouncer
      tolerations:
        - key: "autoscaler-node"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - database-cnpg-pooler-rw
              topologyKey: "kubernetes.io/hostname"
---
apiVersion: postgresql.cnpg.io/v1
kind: Pooler
metadata:
  name: database-cnpg-pooler-ro
  namespace: mastodon
spec:
  cluster:
    name: database-cnpg
  instances: 2
  type: ro
  pgbouncer:
    poolMode: transaction
    parameters:
      max_client_conn: "1000"
      default_pool_size: "125"
  template:
    metadata:
      labels:
        app: database-cnpg-pooler-ro
    spec:
      containers:
        - resources:
            requests:
              cpu: 10m
              memory: 100Mi
            limits:
              memory: 100Mi
          name: pgbouncer
      tolerations:
        - key: "autoscaler-node"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - database-cnpg-pooler-ro
              topologyKey: "kubernetes.io/hostname"
