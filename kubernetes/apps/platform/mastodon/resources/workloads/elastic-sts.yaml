apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  namespace: mastodon
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: master
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: elasticsearch
  serviceName: elasticsearch-master
  template:
    metadata:
      labels:
        app.kubernetes.io/component: master
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: elasticsearch
    spec:
      tolerations:
        - key: "autoscaler-node"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      automountServiceAccountToken: false
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:9.1.2
        imagePullPolicy: IfNotPresent
        env:
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx1g"
        - name: ELASTIC_PASSWORD_FILE
          value: /usr/share/elasticsearch/config/secrets/elasticsearch-password
        - name: ES_SETTING_CLUSTER_NAME
          value: elastic
        - name: ES_SETTING_NODE_ROLES
          value: master
        - name: ES_SETTING_DISCOVERY_TYPE
          value: single-node
        - name: ES_SETTING_XPACK_SECURITY_ENABLED
          value: "true"
        - name: ES_SETTING_XPACK_SECURITY_HTTP_SSL_ENABLED
          value: "true"
        - name: ES_SETTING_XPACK_SECURITY_HTTP_SSL_KEY
          value: /usr/share/elasticsearch/config/certs/tls.key
        - name: ES_SETTING_XPACK_SECURITY_HTTP_SSL_CERTIFICATE
          value: /usr/share/elasticsearch/config/certs/tls.crt
        - name: ES_SETTING_XPACK_SECURITY_HTTP_SSL_CERTIFICATE__AUTHORITIES
          value: /usr/share/elasticsearch/config/certs/ca.crt
        - name: ES_SETTING_XPACK_SECURITY_TRANSPORT_SSL_ENABLED
          value: "false"
        ports:
        - containerPort: 9200
          name: rest-api
        - containerPort: 9300
          name: transport
        livenessProbe:
          tcpSocket:
            port: 9200
          initialDelaySeconds: 180
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
          successThreshold: 1
        readinessProbe:
          tcpSocket:
            port: 9200
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
          successThreshold: 1
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: empty-dir
          mountPath: /tmp
          subPath: tmp-dir
        - name: empty-dir
          mountPath: /usr/share/elasticsearch/tmp
          subPath: app-tmp-dir
        - name: empty-dir
          mountPath: /usr/share/elasticsearch/logs
          subPath: app-logs-dir
        - name: data
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-secrets
          mountPath: /usr/share/elasticsearch/config/secrets
        - name: elasticsearch-certificates
          mountPath: /usr/share/elasticsearch/config/certs
          readOnly: true
      initContainers:
      - name: sysctl
        image: ubuntu:22.04
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -ec
        - |
          CURRENT=$(sysctl -n vm.max_map_count)
          DESIRED="262144"
          if [ "$DESIRED" -gt "$CURRENT" ]; then
              sysctl -w vm.max_map_count=262144
          fi
          CURRENT=$(sysctl -n fs.file-max)
          DESIRED="65536"
          if [ "$DESIRED" -gt "$CURRENT" ]; then
              sysctl -w fs.file-max=65536
          fi
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
            ephemeral-storage: 50Mi
        securityContext:
          privileged: true
          runAsUser: 0
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      serviceAccountName: elasticsearch-master
      volumes:
      - name: empty-dir
        emptyDir: {}
      - name: elasticsearch-secrets
        projected:
          sources:
          - secret:
              name: elasticsearch-credentials
      - name: elasticsearch-certificates
        secret:
          defaultMode: 256
          secretName: mastodon-elastic-server
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: data
    spec:
      storageClassName: hcloud-volumes-encrypted-xfs
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi