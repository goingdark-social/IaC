apiVersion: apps/v1
kind: Deployment
metadata:
  name: mastodon-web
  namespace: mastodon
  labels:
    app: mastodon-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mastodon-web
  template:
    metadata:
      labels:
        app: mastodon-web
        elasticsearch-client: "true"
    spec:
      tolerations:
        - key: "autoscaler-node"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      securityContext:
        fsGroup: 991
      containers:
        - name: web
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault
          image: ghcr.io/glitch-soc/mastodon:v4.4.5
          command: ["/bin/bash", "-c", "bundle exec puma -C config/puma.rb"]
          ports:
            - name: http
              containerPort: 3000
            - name: metrics
              containerPort: 9394
          envFrom:
            # Application secrets (domain, keys, credentials)
            - secretRef:
                name: mastodon-app-secrets
            # Database connection credentials  
            - secretRef:
                name: mastodon-db-url
            # Core application settings
            - configMapRef:
                name: mastodon-core
            # Database connection details
            - configMapRef:
                name: mastodon-database
            # Redis caching and session storage
            - configMapRef:
                name: mastodon-redis
            # Elasticsearch search configuration
            - configMapRef:
                name: mastodon-search
            # Content and feature settings
            - configMapRef:
                name: mastodon-features
            # External services (SMTP + S3 storage)
            - configMapRef:
                name: mastodon-external-services
            # Web server specific settings
            - configMapRef:
                name: mastodon-web
          volumeMounts:
            - name: db-ca
              mountPath: /etc/ssl/certs/postgresql
              readOnly: true
            - name: es-ca
              mountPath: /opt/mastodon/.elasticsearch/ca.crt
              subPath: ca.crt
              readOnly: true
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            # keep short since startupProbe gates readiness
            initialDelaySeconds: 2
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: 3000
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 18   # 10 * 18 = 180s window
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 3
            failureThreshold: 5
          resources:
            requests:
              cpu: "683m"
              memory: "2271Mi"
            limits:
              memory: "2750Mi"
      volumes:
        - name: db-ca
          secret:
            secretName: database-cnpg-ca
            defaultMode: 0444
        - name: es-ca
          secret:
            secretName: mastodon-elastic-ca
            defaultMode: 0444
