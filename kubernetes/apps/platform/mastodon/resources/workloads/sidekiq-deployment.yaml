apiVersion: apps/v1
kind: Deployment
metadata:
  name: mastodon-sidekiq
  namespace: mastodon
  labels:
    app: mastodon-sidekiq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mastodon-sidekiq
  template:
    metadata:
      labels:
        app: mastodon-sidekiq
        elasticsearch-client: "true"
    spec:
      securityContext:
        fsGroup: 991
        fsGroupChangePolicy: Always
      tolerations:
        - key: "autoscaler-node"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      containers:
        - name: sidekiq
          image: ghcr.io/glitch-soc/mastodon:v4.4.4
          args:
            - bundle
            - exec
            - sidekiq
            - -C
            - /opt/mastodon/config/sidekiq.yml
          envFrom:
            # Application secrets (domain, keys, credentials)
            - secretRef:
                name: mastodon-app-secrets
            # Database connection credentials
            - secretRef:
                name: mastodon-db-url
            # Core application settings
            - configMapRef:
                name: mastodon-core
            # Database connection details
            - configMapRef:
                name: mastodon-database
            # Redis queuing and caching
            - configMapRef:
                name: mastodon-redis
            # Search indexing configuration
            - configMapRef:
                name: mastodon-search
            # Content processing settings
            - configMapRef:
                name: mastodon-features
            # External services (SMTP + S3 storage)
            - configMapRef:
                name: mastodon-external-services
            # Background job worker settings
            - configMapRef:
                name: mastodon-sidekiq
          env:
            - name: DB_SSLMODE
              value: verify-ca
            - name: DB_SSLROOTCERT
              value: /opt/mastodon/.postgresql/root.crt
          volumeMounts:
            - name: db-ca
              mountPath: /opt/mastodon/.postgresql/root.crt
              subPath: ca.crt
            - name: es-ca
              mountPath: /opt/mastodon/.elasticsearch/ca.crt
              subPath: ca.crt
          livenessProbe:
            exec:
              command: ["sh", "-c", "ps aux | grep '[s]idekiq\\ 7'"]
            initialDelaySeconds: 60
            periodSeconds: 30
          resources:
            requests:
              cpu: "250m"
              memory: "600Mi"
            limits:
              memory: "1Gi"
          securityContext:
            runAsNonRoot: true
            runAsUser: 991
            runAsGroup: 991
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: db-ca
          secret:
            secretName: mastodon-postgresql-ca
            items:
              - key: ca.crt
                path: ca.crt
        - name: es-ca
          secret:
            secretName: mastodon-elastic-ca
            items:
              - key: ca.crt
                path: ca.crt
