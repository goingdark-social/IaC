# Mastodon Sidekiq generic workers - all resources in one file
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mastodon-sidekiq-generic
  namespace: mastodon
  labels:
    app: mastodon-sidekiq-generic
    component: sidekiq-worker
    app.kubernetes.io/part-of: mastodon
spec:
  replicas: 5
  selector:
    matchLabels:
      app: mastodon-sidekiq-generic
  template:
    metadata:
      labels:
        app: mastodon-sidekiq-generic
        component: sidekiq-worker
        app.kubernetes.io/part-of: mastodon
        elasticsearch-client: "true"
    spec:
      securityContext:
        fsGroup: 991
        fsGroupChangePolicy: Always
      tolerations:
        - key: "autoscaler-node"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: mastodon-sidekiq-generic
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: "autoscaler-node"
                operator: NotIn
                values: ["true"]
      containers:
        - name: sidekiq
          image: ghcr.io/glitch-soc/mastodon:v4.4.4
          args:
            - bundle
            - exec
            - sidekiq
            - -c
            - "25"
            - -q
            - default
            - -q
            - mailers
            - -q
            - push
            - -q
            - ingress
            - -q
            - fasp
            - -q
            - pull
          securityContext:
            runAsNonRoot: true
            runAsUser: 991
            runAsGroup: 991
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          envFrom:
            - secretRef:
                name: mastodon-app-secrets
            - secretRef:
                name: mastodon-db-url
            - configMapRef:
                name: mastodon-env
            - configMapRef:
                name: mastodon-db-pools
          env:
            - name: DB_SSLMODE
              value: verify-ca
            - name: DB_SSLROOTCERT
              value: /opt/mastodon/.postgresql/root.crt
            - name: DB_POOL
              valueFrom:
                configMapKeyRef:
                  name: mastodon-db-pools
                  key: SIDEKIQ_DB_POOL
            - name: SIDEKIQ_CONCURRENCY
              valueFrom:
                configMapKeyRef:
                  name: mastodon-db-pools
                  key: SIDEKIQ_CONCURRENCY
          volumeMounts:
            - name: db-ca
              mountPath: /opt/mastodon/.postgresql/root.crt
              subPath: ca.crt
            - name: es-ca
              mountPath: /opt/mastodon/.elasticsearch/ca.crt
              subPath: ca.crt
          livenessProbe:
            exec:
              command: ["sh", "-c", "ps aux | grep '[s]idekiq\\ 7'"]
            initialDelaySeconds: 60
            periodSeconds: 30
          resources:
            requests:
              cpu: "1000m"
              memory: "2Gi"
            limits:
              memory: "3Gi"
      volumes:
        - name: db-ca
          secret:
            secretName: mastodon-postgresql-ca
            items:
              - key: ca.crt
                path: ca.crt
        - name: es-ca
          secret:
            secretName: mastodon-elastic-ca
            items:
              - key: ca.crt
                path: ca.crt
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mastodon-sidekiq-generic-hpa
  namespace: mastodon
  labels:
    app: mastodon-sidekiq-generic
    component: sidekiq-worker
    app.kubernetes.io/part-of: mastodon
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mastodon-sidekiq-generic
  minReplicas: 5
  maxReplicas: 8
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
        - type: Pods
          value: 1
          periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 120
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mastodon-sidekiq-generic-pdb
  namespace: mastodon
  labels:
    app: mastodon-sidekiq-generic
    component: sidekiq-worker
    app.kubernetes.io/part-of: mastodon
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: mastodon-sidekiq-generic