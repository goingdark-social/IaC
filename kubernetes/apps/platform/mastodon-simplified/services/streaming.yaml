# Mastodon streaming service - all resources in one file
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mastodon-streaming
  namespace: mastodon
  labels:
    app: mastodon-streaming
    component: streaming-server
    app.kubernetes.io/part-of: mastodon
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mastodon-streaming
  template:
    metadata:
      labels:
        app: mastodon-streaming
        component: streaming-server
        app.kubernetes.io/part-of: mastodon
    spec:
      securityContext:
        fsGroup: 991
        fsGroupChangePolicy: Always
      tolerations:
        - key: "autoscaler-node"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      containers:
        - name: streaming
          image: ghcr.io/glitch-soc/mastodon-streaming:v4.4.4
          command: ["node", "./streaming/index.js"]
          ports:
            - name: streaming
              containerPort: 4000
          securityContext:
            runAsNonRoot: true
            runAsUser: 991
            runAsGroup: 991
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          envFrom:
            - secretRef:
                name: mastodon-app-secrets
            - secretRef:
                name: mastodon-db-url
            - configMapRef:
                name: mastodon-env
            - configMapRef:
                name: mastodon-db-pools
          env:
            - name: DB_SSLMODE
              value: verify-ca
            - name: DB_SSLROOTCERT
              value: /opt/mastodon/.postgresql/root.crt
            - name: DB_POOL
              valueFrom:
                configMapKeyRef:
                  name: mastodon-db-pools
                  key: STREAMING_DB_POOL
            - name: PORT
              value: "4000"
          volumeMounts:
            - name: db-ca
              mountPath: /opt/mastodon/.postgresql/root.crt
              subPath: ca.crt
          livenessProbe:
            httpGet:
              path: /api/v1/streaming/health
              port: 4000
            initialDelaySeconds: 20
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /api/v1/streaming/health
              port: 4000
            initialDelaySeconds: 15
            periodSeconds: 15
          resources:
            requests:
              cpu: "150m"
              memory: "384Mi"
            limits:
              memory: "768Mi"
      volumes:
        - name: db-ca
          secret:
            secretName: mastodon-postgresql-ca
            items:
              - key: ca.crt
                path: ca.crt
---
apiVersion: v1
kind: Service
metadata:
  name: mastodon-streaming
  namespace: mastodon
  labels:
    app: mastodon-streaming
    component: streaming-server
    app.kubernetes.io/part-of: mastodon
spec:
  selector:
    app: mastodon-streaming
  ports:
    - name: streaming
      port: 80
      targetPort: 4000
      protocol: TCP
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mastodon-streaming-hpa
  namespace: mastodon
  labels:
    app: mastodon-streaming
    component: streaming-server
    app.kubernetes.io/part-of: mastodon
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mastodon-streaming
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
        - type: Pods
          value: 1
          periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 120
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mastodon-streaming-pdb
  namespace: mastodon
  labels:
    app: mastodon-streaming
    component: streaming-server
    app.kubernetes.io/part-of: mastodon
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: mastodon-streaming