# All Mastodon maintenance jobs in one file
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mastodon-backup-health-check
  namespace: mastodon
  labels:
    app.kubernetes.io/part-of: mastodon
spec:
  schedule: "0 6 * * *"  # Daily at 6 AM
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          tolerations:
            - key: "autoscaler-node"
              operator: "Equal"
              value: "true"
              effect: "NoSchedule"
          containers:
            - name: backup-health-check
              image: postgres:17-alpine
              command: ["/bin/sh"]
              args:
                - -c
                - |
                  echo "Checking backup health..."
                  # Add your backup health check logic here
                  exit 0
              resources:
                requests:
                  cpu: 100m
                  memory: 50Mi
                limits:
                  memory: 100Mi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mastodon-media-cleanup
  namespace: mastodon
  labels:
    app.kubernetes.io/part-of: mastodon
spec:
  schedule: "0 2 * * 0"  # Weekly on Sunday at 2 AM
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          securityContext:
            fsGroup: 991
          tolerations:
            - key: "autoscaler-node"
              operator: "Equal"
              value: "true"
              effect: "NoSchedule"
          containers:
            - name: media-cleanup
              image: ghcr.io/glitch-soc/mastodon:v4.4.4
              command: ["/bin/bash"]
              args:
                - -c
                - |
                  bundle exec bin/tootctl media remove --days=30
                  bundle exec bin/tootctl preview_cards remove --days=30
              securityContext:
                runAsNonRoot: true
                runAsUser: 991
                runAsGroup: 991
                allowPrivilegeEscalation: false
                capabilities:
                  drop: ["ALL"]
                seccompProfile:
                  type: RuntimeDefault
              envFrom:
                - secretRef:
                    name: mastodon-app-secrets
                - secretRef:
                    name: mastodon-db-url
                - configMapRef:
                    name: mastodon-env
                - configMapRef:
                    name: mastodon-db-pools
              env:
                - name: DB_SSLMODE
                  value: verify-ca
                - name: DB_SSLROOTCERT
                  value: /opt/mastodon/.postgresql/root.crt
                - name: DB_POOL
                  valueFrom:
                    configMapKeyRef:
                      name: mastodon-db-pools
                      key: WEB_DB_POOL
              volumeMounts:
                - name: db-ca
                  mountPath: /opt/mastodon/.postgresql/root.crt
                  subPath: ca.crt
              resources:
                requests:
                  cpu: 200m
                  memory: 512Mi
                limits:
                  memory: 1Gi
          volumes:
            - name: db-ca
              secret:
                secretName: mastodon-postgresql-ca
                items:
                  - key: ca.crt
                    path: ca.crt